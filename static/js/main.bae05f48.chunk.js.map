{"version":3,"sources":["store/actions/createProjectActions.js","store/reducers/createReducer.js","store/reducers/playReducer.js","store/actions/playQuizActions.js","store/reducers/rootReducer.js","components/layout/NavBar.js","components/common/SingleSelectCard.jsx","components/common/MultipleSelectCard.jsx","components/common/CreateSingleChoiceQuestion.jsx","components/common/CreateMultipleChoiceQuestion.jsx","components/common/Loader.jsx","components/projects/CreateProject.jsx","components/projects/DashBoard.jsx","components/enduserview/PlayerSingleSelect.jsx","components/enduserview/PlayerMultipleSelect.jsx","components/enduserview/PlayedUserDetails.jsx","components/enduserview/GetUserDetail.jsx","components/enduserview/RenderResults.jsx","components/projects/PlayQuiz.jsx","components/projects/AddDefaultQuestions.jsx","components/enduserview/Result.jsx","App.js","serviceWorker.js","config/fbConfig.js","index.js"],"names":["addQuestion","newQuestion","dispatch","getState","getFirestore","type","onSuccessfulQuizShare","resp","loadDefaultAllQuestions","fireStore","collection","get","then","docs","data","forEach","docItem","questions","push","questionCategory","id","catch","err","console","log","initState","showShareModal","shareId","defaultQuestions","addDefaultQuestions","loadingDone","createReducer","newState","state","action","newQuestions","filter","ques","index","questionNumber","quizId","isLoading","currentPlayingUser","usersScores","quizResult","playReducer","question","title","description","totalQuestions","Object","keys","length","userName","scorePerc","currQues","currentQuestion","rootReducer","combineReducers","createProject","playQuiz","firestore","firestoreReducer","NavBar","className","to","href","data-target","SingleSelectCard","this","props","options","correctAnswer","number","removeQuestion","editQuestion","renderOptions","map","value","key","name","disabled","checked","renderEdit","onClick","renderRemove","Component","MultipleSelectCard","indexOf","CreateSingleChoiceQuestion","handleOptionsChange","e","target","setState","handleChange","handleSubmit","preventDefault","defaultState","M","toast","html","classes","addNewOption","newOptions","removeOption","optionKey","splice","renderDefaultQuestions","defQuestion","i","label","j","questionOptions","onChange","defaultValue","elems","document","querySelectorAll","FormSelect","init","defQuestions","autoComplete","Autocomplete","onAutocomplete","updateTextFields","textareaAutoResize","querySelector","renderOption","required","data-error","htmlFor","answersChoice","renderCorrectAnswers","onSubmit","rows","connect","CreateMultipleChoiceQuestion","currentState","handleAnswers","getElementsByName","l","selected","multiple","Loader","CreateProject","getAttribute","submitAndShareQuiz","addQuizToShare","handleTextChange","descModal","close","renderDescriptionAndTitleModal","quizTitleAndDesc","match","params","questionType","renderEditModal","editModalIsOpen","componentDidUpdate","mobileShare","url","navigator","share","text","error","alert","currentShareId","AutoInit","addEventListener","Modal","dismissible","category","loadDefaultQuestions","elem","getInstance","shareUrl","location","host","renderShareModal","onCopy","canShare","open","cardsList","item","questionsToShare","quiz","add","toLocaleUpperCase","doc","exists","DashBoard","componentDidMount","Sidenav","PlayerSingleSelect","handleSingleAnswer","userAnswer","option","handleMultipleAnswer","PlayedUserDetails","userDetails","currentUser","pop","resultText","scoreList","data-badge-caption","style","fontSize","score","details","showAnswers","onShowAnswers","GetUserDetail","setPlayingUser","RenderResults","que","questionsList","Number","ans","answer","found","String","checkResult","renderCorrectChoiceCard","renderUserAnswer","join","paddingTop","PlayQuiz","getQuizToPlay","currQuestion","hasChangedAnswer","setSingleAnswer","answerArrayIndex","setMultipleAnswers","renderCards","resetAnswer","renderNavButtons","handlePreviousQuestion","handleNextQuestion","hasReachedEnd","getResults","quizEnded","submitQuiz","scores","set","docRef","answerIndex","modified","answerArray","AddDefaultQuestions","addDefaultQuestion","addNewQuestions","questionKey","prevProps","prevstate","getDefaultQuestions","renderQuestions","Result","getQuizResult","quiz_id","App","exact","path","component","Boolean","window","hostname","fbConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestore","rrfProps","config","userProfile","createFirestoreInstance","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bae05f48.chunk.js","sourcesContent":["export const ADD_NEW_QUESTION = 'ADD_NEW_QUESTION';\nexport const DELETE_QUESTION = 'DELETE_QUESTION';\nexport const SHARE_SUCCESSFULL = 'SHARE_SUCCESSFULL';\nexport const ADD_DEFAULT_QUESTIONS = 'ADD_DEFAULT_QUESTIONS';\nexport const GET_DEFAULT_QUESTIONS = 'GET_DEFAULT_QUESTIONS';\n\n\nexport const addQuestion = (newQuestion) => {\n    return (dispatch, getState, { getFirestore }) => {\n        dispatch({\n            type: ADD_NEW_QUESTION,\n            newQuestion\n        });\n    }\n} \n\nexport const removeQuestion = (questionNumber) => {\n    return (dispatch, getState, { getFirestore }) => {\n        dispatch({\n            type: DELETE_QUESTION,\n            questionNumber\n        })\n    }\n} \n\nexport const addQuizToShare = (quiz) => {\n    return (dispatch, getState, { getFirestore }) => {\n\n        const fireStore = getFirestore();\n        fireStore.collection('questions').add({\n            ...quiz\n        }).then((resp)=>{\n            onSuccessfulQuizShare(dispatch, resp);\n        }).catch((err)=>{\n            console.log(err);\n        })\n    }\n}\n\nconst onSuccessfulQuizShare = (dispatch, resp) => {\n    dispatch({\n        type: SHARE_SUCCESSFULL,\n        resp\n    })\n}\n\nexport const addDefaultQuestion = (question) => {\n    return (dispatch, getState, { getFirestore }) => {\n        const fireStore = getFirestore();\n        const { questionCategory, questions } = question;\n        fireStore.collection('defQuestions').doc(questionCategory.toLocaleUpperCase()).set({\n            questions\n        }).then((resp)=>{\n        }).catch((err)=>{\n            console.log(err);\n        })\n    }\n}\n\nexport const loadDefaultQuestions = (category) => {\n    return (dispatch, getState, { getFirestore }) => {\n        const fireStore = getFirestore();\n        const questionCategory = category.toLocaleUpperCase();\n        if(questionCategory) {\n            fireStore.collection('defQuestions').doc(questionCategory).get().then((resp)=>{\n                if (!resp.exists) {\n                    loadDefaultAllQuestions(dispatch, fireStore);\n                }else{\n                    const { questions } = resp.data()\n                    var data = [{\n                        questionCategory,\n                        questions\n                    }]\n                    dispatch({\n                        type: ADD_DEFAULT_QUESTIONS,\n                        data\n                    })\n                }\n            }).catch((err)=>{\n                console.log(err);\n            })\n        }else{\n            loadDefaultAllQuestions(dispatch, fireStore)\n        }\n    }\n}\n\nexport const loadDefaultAllQuestions = (dispatch, fireStore) => {\n        fireStore.collection('defQuestions').get().then((resp)=>{\n            const docs = resp.docs;\n            var data= [];\n\n            docs.forEach(docItem => {\n                const { questions} = docItem.data()\n                data.push({\n                    questionCategory: docItem.id,\n                    questions\n                })\n            })\n            dispatch({\n                type: ADD_DEFAULT_QUESTIONS,\n                data\n            })\n        }).catch((err)=>{\n            console.log(err);\n        })\n}\n\nexport const getDefaultQuestions = (category) => {\n    return (dispatch, getState, { getFirestore }) => {\n        const fireStore = getFirestore();\n        const questionCategory = category.toLocaleUpperCase();\n        if(questionCategory) {\n            fireStore.collection('defQuestions').doc(questionCategory).get().then((resp)=>{\n                if (resp.exists) {\n                    const { questions } = resp.data()\n                    var data = {\n                        loadingDone: true,\n                        questionCategory,\n                        questions\n                    }\n                    dispatch({\n                        type: GET_DEFAULT_QUESTIONS,\n                        data\n                    })\n                }else{\n                    var data = {\n                        loadingDone: true,\n                        questionCategory:'',\n                        questions:[]\n                    }\n                    dispatch({\n                        type: GET_DEFAULT_QUESTIONS,\n                        data\n                    })\n                }\n            }).catch((err)=>{\n                console.log(err);\n                var data = {\n                    loadingDone: true,\n                    questionCategory:'',\n                    questions:[]\n                }\n                dispatch({\n                    type: GET_DEFAULT_QUESTIONS,\n                    data\n                })\n            })\n        }\n    }\n}\n","import { ADD_NEW_QUESTION, DELETE_QUESTION, SHARE_SUCCESSFULL, ADD_DEFAULT_QUESTIONS, GET_DEFAULT_QUESTIONS } from '../actions/createProjectActions'\n\nconst initState = {\n    questions:[\n       \n    ],\n    showShareModal: false,\n    shareId: '',\n    defaultQuestions: [],\n    addDefaultQuestions: {\n        loadingDone: false,\n        questionCategory:'',\n        questions:[]\n    }\n};\n\nconst createReducer = (state=initState, action) => {\n    let newState;\n    switch(action.type){\n        case ADD_NEW_QUESTION:{\n            let questions = [...state.questions, action.newQuestion]\n            newState = {...state, questions}\n            break;\n        };\n        case ADD_DEFAULT_QUESTIONS:{\n            newState = {...state, defaultQuestions: action.data}\n            break;\n        };\n        case DELETE_QUESTION:{\n            let questions = [...state.questions];\n            const newQuestions = questions.filter((ques, index) => {\n                index+=1\n                return index !== action.questionNumber;\n            })\n            \n            newState = {...state, questions:newQuestions}\n            break;\n        };\n        case SHARE_SUCCESSFULL: {\n            newState = {...state, showShareModal: true, shareId: action.resp.id}\n            break;\n        }\n        case GET_DEFAULT_QUESTIONS:{\n            newState = {...state, addDefaultQuestions: action.data}\n            break;\n        };\n        default:{\n           newState = {...state};\n        }\n    }\n    return newState;\n}\n\nexport default createReducer;","import { GET_QUIZ_DATA, SHOW_LOADING_INDICATOR, HIDE_LOADING_INDICATOR, SET_ANSWER, DELETE_CURRENT_ANSWER, SET_USER_NAME, PLAYED_USER_DETAIL, PLAYED_USER_RESULT } from \"../actions/playQuizActions\";\nconst initState = {\n    questions: [],\n    quizId: 'QWF4jtzBycfzNMlEsi0K',\n    isLoading: true,\n    currentPlayingUser: '',\n    usersScores: null,\n    quizResult: []\n};\n\nconst playReducer = (state = initState, action) => {\n  let newState;\n  \n  switch (action.type) {\n    case GET_QUIZ_DATA: {\n      newState = {\n        ...state, \n        questions: action.data.question,\n        title: action.data.title,\n        description: action.data.description,\n        totalQuestions: Object.keys(action.data.question).length,\n        quizId: action.quizId\n      }\n      break;\n    }\n    case SHOW_LOADING_INDICATOR: {\n      newState = {...state, isLoading: true}\n      break;\n    }\n    case PLAYED_USER_RESULT: {\n      newState = {...state, quizResult: action.data}\n      break;\n    }\n    case HIDE_LOADING_INDICATOR: {\n      newState = {...state, isLoading: false}\n      break;\n    }\n    case SET_ANSWER: {\n      newState = {...state, questions: action.questions}\n      break;\n    }\n    case SET_USER_NAME: {\n      newState = {...state, currentPlayingUser: action.userName}\n      break;\n    }\n    case PLAYED_USER_DETAIL: {\n      newState = {...state, usersScores: action.data, scorePerc: action.scorePerc}\n      break;\n    }\n    case DELETE_CURRENT_ANSWER: {\n      let questions = state.questions;\n      let currQues = questions[action.currentQuestion];\n      delete currQues['userAnswer'];\n\n      questions[action.currentQuestion] = currQues;\n      newState = {...state, questions}\n      break;\n    }\n    default: {\n      newState = state;\n    }\n  }\n  return newState;\n};\n\nexport default playReducer;\n","\n\nexport const GET_QUIZ_DATA = \"GET_QUIZ_DATA\";\nexport const SHOW_LOADING_INDICATOR = \"SHOW_LOADING_INDICATOR\";\nexport const HIDE_LOADING_INDICATOR = \"HIDE_LOADING_INDICATOR\";\nexport const SET_ANSWER = \"SET_ANSWER\";\nexport const DELETE_CURRENT_ANSWER = \"DELETE_CURRENT_ANSWER\";\nexport const SET_USER_NAME = \"SET_USER_NAME\";\nexport const PLAYED_USER_DETAIL = \"PLAYED_USER_DETAIL\";\nexport const PLAYED_USER_RESULT = \"PLAYED_USER_RESULT\";\n\n\nexport const submitQuiz = (score, scorePerc) => {\n    return (dispatch, getState, { getFirestore }) => {\n        dispatch({ type: SHOW_LOADING_INDICATOR });\n        const fireStore = getFirestore();\n        const { quizId, currentPlayingUser } = getState().playQuiz;\n        var docRef = fireStore.collection(\"quizScore\").doc(quizId);\n\n        docRef.get().then(function(doc) {\n            if (doc.exists) {\n                let data =  doc.data().scores;       \n                data.push({\n                    userName: currentPlayingUser,\n                    score\n                })\n                fireStore.collection('quizScore').doc(quizId).set({\n                    scores:data\n                }).then((resp)=>{\n                    dispatch({ type: HIDE_LOADING_INDICATOR });\n                }).catch((err)=>{\n                    alert('An error occured');\n                    dispatch({ type: HIDE_LOADING_INDICATOR });\n                })\n                dispatch({\n                    type: PLAYED_USER_DETAIL,\n                    data,\n                    scorePerc\n                })\n            } else {\n                // doc.data() will be undefined in this case\n                const data = [{\n                    userName: currentPlayingUser,\n                    score\n                }];\n                fireStore.collection('quizScore').doc(quizId).set({\n                    scores: data\n                }).then((resp)=>{\n                    dispatch({ type: HIDE_LOADING_INDICATOR });\n                }).catch((err)=>{\n                    alert('An error occured');\n                    dispatch({ type: HIDE_LOADING_INDICATOR });\n                })\n                dispatch({\n                    type: PLAYED_USER_DETAIL,\n                    data,\n                    scorePerc\n                })\n            }\n        }).catch(err=>{      \n            dispatch({ type: HIDE_LOADING_INDICATOR });  \n        });\n    }\n}\n\nexport const getQuizToPlay = (quizId) => {\n    return (dispatch, getState, { getFirestore }) => {\n        const fireStore = getFirestore();\n        var docRef = fireStore.collection(\"questions\").doc(quizId);\n        dispatch({type: SHOW_LOADING_INDICATOR });\n        docRef.get().then(function(doc) {\n            if (doc.exists) {\n                const data= doc.data();\n                dispatch({\n                    type: GET_QUIZ_DATA,\n                    data,\n                    quizId\n                })\n            } \n            dispatch({ type: HIDE_LOADING_INDICATOR });\n        }).catch(err=>{\n            dispatch({ type: HIDE_LOADING_INDICATOR });\n            alert(\"Some error occured. Please try again aftersometime\")\n        });\n    }\n}\n\n// const data = JSON.parse('{\"description\":\"Short Descriprtion\",\"title\":\"Test Quiz\",\"question\":{\"0\":{\"correctAnswer\":\"2\",\"options\":[\"1\",\"2\",\"3\",\"4\"],\"type\":\"singleChoice\",\"question\":\"Ans is 2\"},\"1\":{\"type\":\"singleChoice\",\"options\":[\"1\",\"2\",\"3\",\"4\"],\"correctAnswer\":\"4\",\"question\":\"Ans is 4\"},\"2\":{\"question\":\"Ans is 1,2,4\",\"correctAnswer\":[\"1\",\"2\",\"4\"],\"options\":[\"1\",\"2\",\"3\",\"4\"],\"type\":\"multipleChoice\"},\"3\":{\"question\":\"ans is 1,3\",\"correctAnswer\":[\"1\",\"3\"],\"type\":\"multipleChoice\",\"options\":[\"1\",\"2\",\"3\",\"4\"]}}}');\n// export const getQuizToPlay = (quizId) => {\n//     return (dispatch, getState, { getFirestore }) => {\n//         dispatch({type: SHOW_LOADING_INDICATOR });\n//         dispatch({\n//             type: GET_QUIZ_DATA,\n//             data\n//         })\n//         dispatch({type: HIDE_LOADING_INDICATOR });\n//     }\n// }\n\nexport const setSingleAnswer = (questionNumber, answer) => {\n    return (dispatch, getState, { getFirestore }) => {\n        const { playQuiz } = getState();\n        let { questions } = playQuiz\n        const modified = {...questions[questionNumber], userAnswer: answer}\n        questions[questionNumber] = modified\n        dispatch({type: SET_ANSWER, questions });\n    }\n}\n\nexport const setMultipleAnswers = (questionNumber, answerArray) => {\n    return (dispatch, getState, { getFirestore }) => {\n        const { playQuiz } = getState();\n        \n        let { questions } = playQuiz\n        const modified = {...questions[questionNumber], userAnswer: answerArray}\n        questions[questionNumber] = modified\n        dispatch({type: SET_ANSWER, questions });\n    }\n}\n\n\nexport const getQuizResult = (quizId) => {\n    return (dispatch, getState, { getFirestore }) => {\n        dispatch({ type: SHOW_LOADING_INDICATOR });\n        const fireStore = getFirestore();\n        var docRef = fireStore.collection(\"quizScore\").doc(quizId);\n\n        docRef.get().then(function(doc) {\n            if (doc.exists) {\n                let data =  doc.data().scores;       \n                dispatch({\n                    type: PLAYED_USER_RESULT,\n                    data\n                })\n            }else{\n                alert(\"No one played this quiz OR No such quizId\")\n            }\n            dispatch({ type: HIDE_LOADING_INDICATOR });\n        }).catch(err=>{\n            alert(\"Some error occured\")\n            dispatch({ type: HIDE_LOADING_INDICATOR });\n        });\n    }    \n}","import createReducer from './createReducer';\nimport playReducer from './playReducer';\nimport { firestoreReducer } from 'redux-firestore'\nimport {combineReducers} from 'redux'\n\nconst rootReducer = combineReducers({\n    createProject: createReducer,\n    playQuiz: playReducer,\n    firestore: firestoreReducer\n})\n\nexport default rootReducer;","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nconst NavBar = () => {\n  return (\n    <div>\n      <nav>\n        <div className=\"nav-wrapper\">\n          <Link to='/' className=\"brand-logo center\">Fun Quiz</Link>\n          <a href=\"#\" data-target=\"mobile-demo\" className=\"sidenav-trigger\">\n            <i className=\"material-icons\">menu</i>\n          </a>\n          <ul className=\"right hide-on-med-and-down\">\n            <li><NavLink to=\"/createQuiz\">Create New</NavLink></li>\n          </ul>\n        </div>\n      </nav>\n\n      <ul className=\"sidenav\" id=\"mobile-demo\">\n        <li><NavLink to=\"/createQuiz\">Create New</NavLink></li>\n      </ul>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from 'react'\n\nexport default class SingleSelectCard extends Component {\n    render() {\n        const { options, question, correctAnswer, number ,removeQuestion, editQuestion} = this.props;\n        const renderOptions = options.map((value, index) => {\n            index+=1;\n            return (\n                <p key={value+index}>\n                    <label className=\"grey-text text-darken-4\">\n                        <input className=\"with-gap\" name={question} type=\"radio\"  disabled checked={correctAnswer===index+\"\"}/>\n                        <span>{value}</span>\n                    </label>\n                </p>\n            );\n        })\n        const renderEdit = typeof editQuestion===\"function\"?(\n            <span className=\"float right\" onClick={()=>{editQuestion(number)}}>\n                <i className=\"material-icons\">edit</i>\n            </span>\n        ):null;\n        const renderRemove = typeof removeQuestion===\"function\"?(\n            <span className=\"float right\" onClick={()=>{removeQuestion(number)}}>\n                <i className=\"material-icons\">close</i>\n            </span>\n        ):null;\n        return (\n            <div className=\"row \">\n                <div className=\"col s11 m11\">\n                    <div className=\"card blue darken-3\">\n                        <div className=\"card-content white-text\">\n                            {renderRemove}\n                            {renderEdit} \n                            <span className=\"card-title\">Question {number}</span>\n                            <h3>{question}</h3>\n                        </div>\n                        <div className=\"card-action left-align  blue lighten-3\">\n                            {renderOptions}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class MultipleSelectCard extends Component {\n    render() {\n        const { options, question, correctAnswer, number ,removeQuestion, editQuestion } =this.props;\n\n        const renderOptions = options.map((value, index) => {\n            index+=1;\n            const checked = correctAnswer.indexOf(index+\"\")>-1? true : false;\n            return (\n                <p key={value+index}>\n                     <label className=\"grey-text text-darken-4\">\n                        <input type=\"checkbox\" checked={checked} disabled/>\n                        <span>{value}</span>\n                    </label>\n                </p>\n            );\n        })\n        const renderEdit = typeof editQuestion===\"function\"?(\n            <span className=\"float right\" onClick={()=>{editQuestion(number)}}>\n                <i className=\"material-icons\">edit</i>\n            </span>\n        ):null;\n        const renderRemove = typeof removeQuestion===\"function\"?(\n            <span className=\"float right\" onClick={()=>{removeQuestion(number)}}>\n                <i className=\"material-icons\">close</i>\n            </span>\n        ):null;\n        return (\n            <div className=\"row \">\n                <div className=\"col s11 m11\">\n                    <div className=\"card blue darken-3\">\n                        <div className=\"card-content white-text\">\n                            {renderRemove}\n                            {renderEdit}\n                            <span className=\"card-title\">Question {number}</span>\n                            <h3>{question}</h3>\n                        </div>\n                        <div className=\"card-action left-align  blue lighten-3\">\n                            {renderOptions}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { addQuestion } from \"../../store/actions/createProjectActions\";\nclass CreateSingleChoiceQuestion extends Component {\n  constructor(props) {\n    super(props);\n    this.defaultState = {\n      type: \"singleChoice\",\n      question: \"\",\n      correctAnswer: \"\",\n      options: [\"\", \"\"],\n    };\n    this.state = { ...this.defaultState };\n  }\n\n  componentDidUpdate() {\n    var elems = document.querySelectorAll(\"select\");\n    M.FormSelect.init(elems, \"\");\n\n    const { defaultQuestions } = this.props;\n    const data = {};\n    defaultQuestions.forEach((defQuestions) => {\n      const { questions } = defQuestions;\n      questions.forEach((ques) => {\n        data[ques] = null;\n      });\n    });\n\n    var autoComplete = document.querySelectorAll(\".autocomplete\");\n    M.Autocomplete.init(autoComplete, {\n      data,\n      onAutocomplete: (e) => {\n        this.setState({\n          question: e,\n        });\n      },\n    });\n    M.updateTextFields();\n\n    M.textareaAutoResize(document.querySelector(\".materialize-textarea\"));\n  }\n\n  componentDidMount() {\n    var elems = document.querySelectorAll(\"select\");\n    M.FormSelect.init(elems, \"\");\n  }\n\n  componentWillUpdate(){\n    M.updateTextFields();\n  }\n\n  handleOptionsChange = (e, index) => {\n    let { options } = this.state;\n    options[index - 1] = e.target.value;\n    this.setState({\n      options,\n    });\n  };\n\n  handleChange = (e) => {\n    if (e.target.name === \"questionOptions\") {\n      this.setState({\n        question: e.target.value,\n        [e.target.name]: e.target.value,\n      });\n      return;\n    }\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.addQuestion(this.state);\n    this.setState({\n      ...this.defaultState,\n      options: [\"\", \"\"],\n    });\n    M.toast({ html: \"Question submitted successfully\", classes: \"rounded\" });\n  };\n\n  addNewOption = () => {\n    let newOptions = [...this.state.options, \"\"];\n    this.setState({\n      options: newOptions,\n    });\n  };\n\n  removeOption = (optionKey) => {\n    let newOptions = [...this.state.options];\n    if (newOptions.length <= 2) {\n      return;\n    }\n    newOptions.splice(optionKey - 1, 1);\n    this.setState({\n      options: newOptions,\n    });\n  };\n\n  renderDefaultQuestions = () => {\n    const { defaultQuestions } = this.props;\n    if (defaultQuestions.length > 0) {\n      const renderOptions = defaultQuestions.map((defQuestion, i) => {\n        const { questionCategory, questions } = defQuestion;\n        return (\n          <optgroup label={questionCategory} key={i + \"ind\"}>\n            {questions.map((ques, j) => (\n              <option value={ques} key={j + \"ind\"}>\n                {ques}\n              </option>\n            ))}\n          </optgroup>\n        );\n      });\n      return (\n        <div className=\"input-field col s12\">\n          <select\n            value={this.state.questionOptions}\n            name=\"questionOptions\"\n            onChange={this.handleChange}\n          >\n            <option value=\"\" disabled defaultValue>\n              Choose your option\n            </option>\n            {renderOptions}\n          </select>\n          <label>Default questions</label>\n        </div>\n      );\n    } else return null;\n  };\n\n  render() {\n    const { options } = this.state;\n    const renderOption = options.map((value, index) => {\n      index += 1;\n      return (\n        <div className=\"row\" key={\"unq\" + index}>\n          <div className=\"input-field col s11\">\n            <i className=\"material-icons prefix\">blur_circular</i>\n            <input\n              id={\"option_\" + index}\n              type=\"text\"\n              className=\"materialize-textarea validate\"\n              name={\"option_\" + index}\n              required\n              data-error=\"Please enter some value\"\n              value={value}\n              onChange={(e) => this.handleOptionsChange(e, index)}\n            />\n            <label htmlFor={\"option_\" + index} className=\"active\">{\"Option \" + index}</label>\n          </div>\n          <div\n            className=\"input-field col s1\"\n            onClick={() => this.removeOption(index)}\n          >\n            <i className=\"material-icons white red-text\">\n              remove_circle_outline\n            </i>\n          </div>\n        </div>\n      );\n    });\n    const answersChoice = options.map((value, index) => {\n      index += 1;\n      return (\n        <option value={index} key={\"Option \" + index}>\n          {\"Option \" + index}\n        </option>\n      );\n    });\n\n    const renderCorrectAnswers = (\n      <div className=\"col s12\">\n        <label>Correct Answer</label>\n        <select\n          value={this.state.correctAnswer}\n          name=\"correctAnswer\"\n          onChange={this.handleChange}\n          required\n        >\n          <option value=\"\" disabled>\n            Choose your option\n          </option>\n          {answersChoice}\n        </select>\n      </div>\n    );\n    return (\n      <div className=\"row container\">\n        <form className=\"col s12\" onSubmit={this.handleSubmit}>\n          <div className=\"row\">\n            {this.props.defaultQuestions && this.renderDefaultQuestions()}\n            <div className=\"input-field col s12\">\n              <i className=\"material-icons prefix\">question_answer</i>\n              <textarea\n                id=\"question\"\n                name=\"question\"\n                value={this.state.question}\n                onChange={this.handleChange}\n                className={`materialize-textarea autocomplete`}\n                rows=\"4\"\n              ></textarea>\n              <label htmlFor=\"question\">Question</label>\n            </div>\n            <div className=\"col s12\">\n              {renderOption}\n              <div\n                className=\"right btn-floating  waves-effect waves-light pulse red\"\n                onClick={this.addNewOption}\n              >\n                <i className=\"tiny material-icons\">add</i>\n              </div>\n            </div>\n            {renderCorrectAnswers}\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">\n              Submit and Add\n              <i className=\"material-icons right\">send</i>\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addQuestion: (newQuestion) => dispatch(addQuestion(newQuestion)),\n  };\n};\nexport default connect(null, mapDispatchToProps)(CreateSingleChoiceQuestion);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { addQuestion } from \"../../store/actions/createProjectActions\";\nclass CreateMultipleChoiceQuestion extends Component {\n  constructor(props) {\n    super(props);\n    this.defaultState = {\n      type: \"multipleChoice\",\n      question: \"\",\n      correctAnswer: [],\n      options: [\"\", \"\"],\n    };\n    this.state = { ...this.defaultState };\n  }\n\n  componentDidMount() {\n    var elems = document.querySelectorAll(\"select\");\n    M.FormSelect.init(elems, \"\");\n\n    const { defaultQuestions } = this.props;\n    const data = {};\n    defaultQuestions.forEach((defQuestions) => {\n      const { questions } = defQuestions;\n      questions.forEach((ques) => {\n        data[ques] = null;\n      });\n    });\n\n    var autoComplete = document.querySelectorAll(\".autocomplete\");\n    M.Autocomplete.init(autoComplete, {\n      data,\n      onAutocomplete: (e) => {\n        this.setState({\n          question: e,\n        });\n      },\n    });\n  }\n\n  componentDidUpdate() {\n    var elems = document.querySelectorAll(\"select\");\n    M.FormSelect.init(elems, \"\");\n    M.updateTextFields();\n  }\n\n  handleOptionsChange = (e, index) => {\n    let { options } = this.state;\n    options[index - 1] = e.target.value;\n    this.setState({\n      options,\n    });\n  };\n\n  handleChange = (e) => {\n    if (e.target.name === \"questionOptions\") {\n      this.setState({\n        question: e.target.value,\n        [e.target.name]: e.target.value,\n      });\n      return;\n    }\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleAnswers() {\n    const e = document.getElementsByName(\"correctAnswer\")[0];\n    var options = e.options;\n    var value = [];\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    return value;\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const currentState = { ...this.state };\n    const correctAnswer = [...this.handleAnswers()];\n    this.props.addQuestion({ ...currentState, correctAnswer });\n    this.setState({\n      ...this.defaultState,\n      options: [\"\", \"\"],\n      correctAnswer: [],\n    });\n    M.toast({ html: \"Question submitted successfully\", classes: \"rounded\" });\n  };\n\n  addNewOption = () => {\n    let newOptions = [...this.state.options, \"\"];\n    this.setState({\n      options: newOptions,\n    });\n  };\n\n  removeOption = (optionKey) => {\n    let newOptions = [...this.state.options];\n    if (newOptions.length <= 2) {\n      return;\n    }\n    newOptions.splice(optionKey - 1, 1);\n    this.setState({\n      options: newOptions,\n    });\n  };\n\n  renderDefaultQuestions = () => {\n    const { defaultQuestions } = this.props;\n    if (defaultQuestions.length > 0) {\n      const renderOptions = defaultQuestions.map((defQuestion, i) => {\n        const { questionCategory, questions } = defQuestion;\n        return (\n          <optgroup label={questionCategory}>\n            {questions.map((ques) => (\n              <option value={ques}>{ques}</option>\n            ))}\n          </optgroup>\n        );\n      });\n      return (\n        <div className=\"input-field col s12\">\n          <select\n            value={this.state.questionOptions}\n            name=\"questionOptions\"\n            onChange={this.handleChange}\n          >\n            {renderOptions}\n          </select>\n          <label>Default questions</label>\n        </div>\n      );\n    } else return null;\n  };\n\n  render() {\n    const { options } = this.state;\n    const renderOption = options.map((value, index) => {\n      index += 1;\n      return (\n        <div className=\"row\" key={\"unq\" + index}>\n          <div className=\"input-field col s11\">\n            <i className=\"material-icons prefix\">blur_circular</i>\n            <input\n              id={\"option_\" + index}\n              type=\"text\"\n              className=\"materialize-textarea validate\"\n              name={\"option_\" + index}\n              required\n              data-error=\"Please enter some value\"\n              value={value}\n              onChange={(e) => this.handleOptionsChange(e, index)}\n            />\n            <label htmlFor={\"option_\" + index} className=\"active\">{\"Option \" + index}</label>\n          </div>\n          <div\n            className=\"input-field col s1\"\n            onClick={() => this.removeOption(index)}\n          >\n            <i className=\"material-icons white red-text\">\n              remove_circle_outline\n            </i>\n          </div>\n        </div>\n      );\n    });\n    const answersChoice = options.map((value, index) => {\n      index += 1;\n      return (\n        <option value={index} key={\"Option \" + index}>\n          {\"Option \" + index}\n        </option>\n      );\n    });\n\n    const renderCorrectAnswers = (\n      <div className=\"input-field col s12\">\n        <select multiple required name=\"correctAnswer\">\n          <option value=\"\" disabled>\n            Choose your option\n          </option>\n          {answersChoice}\n        </select>\n        <label>Multiple Answers</label>\n      </div>\n    );\n\n    return (\n      <div className=\"row container\">\n        <form className=\"col s12\" onSubmit={this.handleSubmit}>\n          <div className=\"row\">\n            {this.props.defaultQuestions && this.renderDefaultQuestions()}\n            <div className=\"input-field col s12\">\n              <i className=\"material-icons prefix\">question_answer</i>\n              <textarea\n                id=\"question\"\n                name=\"question\"\n                value={this.state.question}\n                onChange={this.handleChange}\n                className=\"materialize-textarea autocomplete\"\n                rows=\"4\"\n              ></textarea>\n              <label htmlFor=\"question\">Question</label>\n            </div>\n            <div className=\"col s12\">\n              {renderOption}\n              <div\n                className=\"right btn-floating  waves-effect waves-light pulse red\"\n                onClick={this.addNewOption}\n              >\n                <i className=\"tiny material-icons\">add</i>\n              </div>\n            </div>\n            {renderCorrectAnswers}\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">\n              Save and Continue\n              <i className=\"material-icons right\">send</i>\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addQuestion: (newQuestion) => dispatch(addQuestion(newQuestion)),\n  };\n};\nexport default connect(null, mapDispatchToProps)(CreateMultipleChoiceQuestion);\n","import React from 'react'\n\nexport default function Loader() {\n    return (\n        <div className=\"loader preloader-wrapper big active\">\n          <div className=\"spinner-layer spinner-blue-only\">\n            <div className=\"circle-clipper left\">\n              <div className=\"circle\"></div>\n            </div>\n            <div className=\"gap-patch\">\n              <div className=\"circle\"></div>\n            </div>\n            <div className=\"circle-clipper right\">\n              <div className=\"circle\"></div>\n            </div>\n          </div>\n        </div>\n      );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport SingleSelectCard from \"../common/SingleSelectCard\";\nimport MultipleSelectCard from \"../common/MultipleSelectCard\";\nimport CreateSingleChoiceQuestion from \"../common/CreateSingleChoiceQuestion\";\nimport CreateMultipleChoiceQuestion from \"../common/CreateMultipleChoiceQuestion\";\nimport {\n  removeQuestion,\n  addQuizToShare,\n  loadDefaultQuestions\n} from \"../../store/actions/createProjectActions\";\nimport { Link } from \"react-router-dom\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport Loader from \"../common/Loader\";\n\nclass CreateProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionType: \"single\",\n      currentShareId: \"\",\n      description: \"\",\n      title: \"\",\n      editModalIsOpen: false\n    };\n  }\n\n  handleChange = (e) => {\n    const name = e.target.getAttribute(\"name\");\n    const value = e.target.getAttribute(\"value\");\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitAndShareQuiz = () => {\n    let { title, description } = this.state;\n    if (this.props.shareId) return;\n    this.props.addQuizToShare({\n      title,\n      description,\n      question:{...this.props.questions}\n    });\n  };\n\n  handleTextChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.descModal.close();\n  };\n\n  renderDescriptionAndTitleModal = () => {\n    this.quizTitleAndDesc = (\n      <div className=\"row\">\n        <div className=\"input-field col s12\">\n          <input\n            id=\"title\"\n            name=\"title\"\n            value={this.state.title}\n            onChange={this.handleTextChange}\n            type=\"text\"\n            className=\"validate\"\n            required\n          />\n          <label htmlFor=\"title\" className=\"active\">Name Your Quiz</label>\n        </div>\n        <div className=\"input-field col s12\">\n          <input\n            id=\"description\"\n            name=\"description\"\n            value={this.state.description}\n            onChange={this.handleTextChange}\n            type=\"text\"\n            className=\"validate\"\n            required\n          />\n          <label className=\"active\" htmlFor=\"description\">\n            Enter a short description for your quiz\n          </label>\n        </div>\n      </div>\n    );\n    return (\n      <div>\n        <div id=\"descModal\" className=\"modal descModal\">\n          <form className=\"col s12\" onSubmit={this.handleSubmit}>\n            <div className=\"modal-content\">\n              <span className=\"card-title\"><h4>{this.props.match.params.questionType ? `You are creating quiz for ${this.props.match.params.questionType}`: \"Custom Quiz\"}</h4></span>\n              {this.quizTitleAndDesc}\n            </div>\n            <div className=\"modal-footer\">\n            <div className=\"modal-footer\">\n              <button  className=\"modal-close waves-effect waves-green btn-flat\">Submit</button>\n            </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  removeQuestion = (number) => {\n    this.props.removeQuestion(number);\n    M.toast({ html: \"Question removed successfully\", classes: \"rounded\" });\n  };\n\n  renderEditModal = () => {  \n    if(this.state.editModalIsOpen){\n        return  (\n          <div id=\"editModal\" className=\"modal editModal\">\n            <div className=\"modal-content\">\n              {this.state.questionType === \"single\" ? <CreateSingleChoiceQuestion {...this.props} /> : <CreateSingleChoiceQuestion {...this.props} />}\n            </div>\n          </div>\n        )\n    }\n    return null;\n  }\n  \n  componentDidMount() {\n    M.AutoInit();\n    this.descModal = null;\n    document.addEventListener(\"DOMContentLoaded\", function () {\n      var elems = document.querySelectorAll(\".modal\");\n      M.Modal.init(elems, {\n        dismissible: false,\n      });\n    });\n\n    const { match } = this.props;\n    const category = match.params.questionType || \"\";\n    this.props.loadDefaultQuestions(category);\n\n    var elem = document.querySelector(\".descModal\");\n    this.descModal = M.Modal.getInstance(elem);\n  }\n\n  componentDidUpdate = () => {\n    M.updateTextFields();\n  }\n\n  mobileShare = (url) => {\n    if (navigator.share) {\n      navigator.share({\n        title: 'The Quiz App',\n        text: `Hey I am inviting you to play quiz specially made for you.`,\n        url: 'http://'+url,\n      })\n      .then(() => console.log('Successful share'))\n      .catch((error) => console.log('Error sharing', error));\n    }else{\n      alert(\"This is only possible in mobile devices\");\n    } \n  };\n\n  render() {\n    const { questions, shareId } = this.props;\n    const { questionType } = this.state;\n    let shareDetails;\n    let shareUrl = document.location.host + \"/playQuiz/\" + shareId;\n    const renderShareModal = (\n      <div id=\"share_modal\" className=\"modal shareModal\">\n        <div className=\"modal-content\">\n          <h3 className=\"header\">\n            Share your Quiz\n          </h3>\n          {shareId ? <h4>{shareUrl}</h4> : <Loader />}\n        </div>\n        <div className=\"modal-footer\">\n          {shareId?(\n            <div className=\"row center\">\n              <span className=\"col s6 m3 waves-effect waves-red btn-flat\">\n                <CopyToClipboard text={shareUrl} onCopy={()=>M.toast({ html: \"Link Copied\", classes: \"rounded\"})}>\n                  <span>\n                    Copy to Clipboard\n                    <i className=\"material-icons\">content_copy</i>\n                  </span>\n                </CopyToClipboard>\n              </span>\n              <Link to={\"/playQuiz/\" + shareId} className=\"col s6 m3\">\n                <span className=\"waves-effect waves-green btn-flat\">Share and Play</span>\n              </Link>\n              {navigator.canShare ? <span className=\"col s6 m3 waves-effect waves-red btn-flat\" onClick={()=>this.mobileShare(shareUrl)}>Mobile App Share</span>:null}\n              {navigator.canShare ? <a href={`whatsapp://send?text=Hi I am inviting you to play this fantastic quiz. \\n http://${shareUrl}`} className=\"col s6 m3 waves-effect waves-red btn-flat\" >Whatsapp</a>:<a target=\"_blank\" href={`https://web.whatsapp.com:/send?text=Hi I am inviting you to play this fantastic quiz. \\n http://${shareUrl}`} className=\"col s6 m3 waves-effect waves-red btn-flat\" >Whatsapp</a> }\n              <span className=\"col s6 m3 modal-close waves-effect waves-red btn-flat\">Close</span>\n            </div>\n          ):null}\n        </div>\n      </div>\n    );\n    if (this.descModal && (!this.state.description || !this.state.title))\n      this.descModal.open();\n\n    const cardsList =\n      questions.length > 0\n        ? questions.map((item, index) => {\n            if (item.type === \"singleChoice\")\n              return (\n                <SingleSelectCard\n                  {...item}\n                  number={index + 1}\n                  removeQuestion={this.removeQuestion}\n                  editQuestion={this.editQuestion}\n                  key={`question${index}`}\n                />\n              );\n            return (\n              <MultipleSelectCard\n                {...item}\n                number={index + 1}\n                removeQuestion={this.removeQuestion}\n                editQuestion={this.editQuestion}\n                key={`question${index}`}\n              />\n            );\n          })\n        : null;\n\n    return (\n      <div>\n        {this.renderDescriptionAndTitleModal()}\n        {this.renderEditModal()}\n        <div className=\"row container\">{this.quizTitleAndDesc}</div>\n        <div className=\"row center\">\n          <div className=\"col s12 m5 offset-m1 questionContainer\">\n            {!this.props.shareId && (\n              <div className=\"row\">\n                {questionType !== \"single\" ? (\n                  <div>\n                    <div\n                      className=\"waves-effect waves-light btn left\"\n                      name=\"questionType\"\n                      value=\"single\"\n                      onClick={this.handleChange}\n                    >\n                      Create Single Choice Question\n                    </div>\n                  </div>\n                ) : (\n                  <div\n                    className=\"waves-effect waves-light btn left\"\n                    name=\"questionType\"\n                    value=\"multiple\"\n                    onClick={this.handleChange}\n                  >\n                    Create Multiple Choice Question\n                  </div>\n                )}\n              </div>\n            )}\n            {this.state.questionType === \"single\" ? (\n              <CreateSingleChoiceQuestion {...this.props} />\n            ) : (\n              <CreateMultipleChoiceQuestion {...this.props} />\n            )}\n            {this.props.questions.length > 0 && (\n              <button\n                data-target=\"share_modal\"\n                className=\"btn modal-trigger\"\n                onClick={this.submitAndShareQuiz}\n              >\n                Submit and Share Quiz\n              </button>\n            )}\n          </div>\n          <div className=\"col s12 m5 offset-m1 container cardConatiner\">\n            <h1>Questions preview</h1>\n            {cardsList || \"Enter Questions\"}\n          </div>\n        </div>\n        {renderShareModal}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    questions: state.createProject.questions,\n    showShareModal: state.createProject.showShareModal,\n    shareId: state.createProject.shareId,\n    defaultQuestions: state.createProject.defaultQuestions\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  removeQuestion: (number) => dispatch(removeQuestion(number)),\n  addQuizToShare: (questionsToShare) => dispatch(addQuizToShare(questionsToShare)),\n  loadDefaultQuestions: (category) => dispatch(loadDefaultQuestions(category))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nexport default class DashBoard extends Component {\n    componentDidMount=() =>{\n        var elems = document.querySelectorAll('.sidenav');\n        M.Sidenav.init(elems);\n    }\n  render() {\n    return (\n      <div className=\"section  dashboard center\">\n        <div className=\"wrapper container\">\n          <h2>\n            Create Quiz for <span className=\"dynamictext\"></span>\n          </h2>\n          <p>\n            Custom quiz creation and play is to relive beautiful memories,\n            reminisce lovely moments, remember the time together, know each\n            other better and ultimately have some fun !!!\n          </p>\n          <div className=\"row\">\n            <span className=\"linkBtns col s5 offset-s1 offset-m1 m3\">\n                <Link to=\"/createQuiz/parents\" className=\"grey-text text-darken-4\">\n                Parents\n                </Link>\n            </span>\n            <span className=\"linkBtns col s5 offset-s1 offset-m1 m3\">\n                <Link to=\"/createQuiz/children\" className=\"grey-text text-darken-4\">\n                Children\n                </Link>\n            </span>\n            <span className=\"linkBtns col s5 offset-s1 offset-m1 m3\">\n                <Link to=\"/createQuiz/spouse\" className=\"grey-text text-darken-4\">\n                Spouse\n                </Link>\n            </span>\n            <span className=\"linkBtns col s5 offset-s1 offset-m1 m3\">\n                <Link to=\"/createQuiz/siblings\" className=\"grey-text text-darken-4\">\n                Siblings\n                </Link>\n            </span>\n            <span className=\"linkBtns col s5 offset-s1 offset-m1 m3\">\n                <Link to=\"/createQuiz/friends\" className=\"grey-text text-darken-4\">\n                Friends\n                </Link>\n            </span>\n            <span className=\"linkBtns col s5 offset-s1 offset-m1 m3\">\n                <Link to=\"/createQuiz\" className=\"grey-text text-darken-4\">\n                Others\n                </Link>\n            </span>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport { setSingleAnswer } from '../../store/actions/playQuizActions'\nimport { connect } from 'react-redux';\nexport default class PlayerSingleSelect extends Component {\n    \n\n    render() {\n        const { options, question, currentQuestion, disabled, totalQuestions, handleSingleAnswer, userAnswer } =this.props;\n        const renderOptions = () => {\n            return (\n                <Fragment>\n                    <form action=\"#\">\n                        {\n                            options.map((option, index) =>{\n                                index += 1;\n                                return (\n                                    <p key={option+index}>\n                                        <label>\n                                            <input name={question} type=\"radio\" checked={index===userAnswer} onChange={()=>handleSingleAnswer(currentQuestion, index)} disabled={disabled}/>\n                                            <span className=\"grey-text text-darken-4\">{option}</span>\n                                        </label>\n                                    </p>\n                                )\n                            })\n                        }\n                    </form>\n                </Fragment>\n            )\n        }\n        return (\n            <div className=\"row center\">\n                <div className=\"col s12 offset-m1 m10\">\n                    <div className=\"card blue darken-3\">\n                        <div className=\"card-content white-text\">\n                            <span className=\"card-title\">{`Question ${currentQuestion+1} of ${totalQuestions}`}</span>\n                            <h3>{question}</h3>\n                        </div>\n                        <div className=\"card-action left-align blue lighten-3\">\n                            {renderOptions()}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nexport default class PlayerSingleSelect extends Component {\n  componentDidMount = () => {\n    M.AutoInit();\n  };\n\n  render() {\n    const { options, question, currentQuestion, disabled, totalQuestions, handleMultipleAnswer } = this.props;\n    let userAnswer = this.props.userAnswer || [];\n    const renderOptions = options.map((value, index) => {\n      index += 1;\n      return (\n        <p key={value + index} >\n          <label>\n            <input type=\"checkbox\" checked={userAnswer.indexOf(index) !== -1} onChange={() => handleMultipleAnswer(currentQuestion,index)} disabled={disabled}/>\n            <span className=\"grey-text text-darken-4\">{value}</span>\n          </label>\n        </p>\n      );\n    });\n    return (\n      <div className=\"row center\">\n        <form>\n          <div className=\"col s12 offset-m1 m10\">\n            <div className=\"card blue darken-3\">\n              <div className=\"card-content white-text\">\n                <span className=\"card-title\">{`Question ${currentQuestion} of ${totalQuestions}`}</span>\n                <h3>{question}</h3>\n              </div>\n              <div className=\"card-action left-align  blue lighten-3\">\n                {renderOptions}\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react'\n\nexport default function PlayedUserDetails(props) {\n    let { userDetails, scorePerc, totalQuestions } = props;\n    const currentUser = userDetails.pop();\n    let resultText = \"\";\n    if(scorePerc>= 80)\n      resultText = \"You know the person exceptionally well !!!\"\n    else if(scorePerc>=50)\n      resultText = \"You know the person very well !!!\"\n    else if(scorePerc >= 20)\n      resultText = \"You know the person well !!!\"\n    else\n      resultText = \"Better luck next time !!!\"\n\n    const scoreList = [\n      <li className=\"collection-header\">\n        <h4>\n          <div>\n            {currentUser.userName}\n            <span className=\"secondary-content new badge\" data-badge-caption=\"\" style={{fontSize: \"18px\"}}>\n              {currentUser.score}/{totalQuestions}\n            </span>\n          </div>\n        </h4>\n      </li>\n    ];\n\n    scoreList.push(\n      userDetails.map((details) => {\n        return (\n          <li className=\"collection-item\">\n            <div>\n              {details.userName}\n              <span className=\"secondary-content\">\n                {details.score}/{totalQuestions}\n              </span>\n            </div>\n          </li>\n        );\n      })\n    );\n\n    return (\n        <div className=\"section scrollspy\">\n            <div className=\"row\">\n                <h3 className=\"col s12 m4 offset-m4 center red\">\n                  {resultText}\n                </h3>\n                <div className=\"col s12 m4 offset-m4\">\n                    <ul className=\"collection with-header\">{scoreList}</ul>\n                    {!props.showAnswers && <span className=\"btn\" onClick={() => props.onShowAnswers()}>{props.showAnswers?\"Hide Answers\":\"Show Answers\"}</span>}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { SET_USER_NAME } from '../../store/actions/playQuizActions'\nclass GetUserDetail extends Component {\n    constructor(){\n        super();\n        this.state = {\n            userName: ''\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container center\">\n              <div className=\"row\">\n                <div className=\"input-field align-left col s12\">\n                  <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"input-field col s12\">\n                  <h6>{this.props.description}</h6>\n                </div>\n                <div className=\"input-field col s12\">ENTER YOUR NAME</div>\n                <div className=\"input-field col s12\">\n                  <input\n                    id=\"first_name\"\n                    type=\"text\"\n                    name=\"userName\"\n                    value={this.state.userName}\n                    onChange={this.handleChange}\n                    className=\"validate\"\n                  />\n                  <label htmlFor=\"first_name\" className=\"active\">User Name</label>\n                </div>\n                <div className=\"input-field col s12\">\n                  <button\n                    className=\"btn waves-effect waves-light\"\n                    onClick={() =>\n                      this.props.setPlayingUser(this.state.userName)\n                    }\n                  >\n                    Submit\n                    <i className=\"material-icons right\">send</i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n      title: state.playQuiz.title,\n      description: state.playQuiz.description\n    };\n  };\n\n\nexport default connect(mapStateToProps)(GetUserDetail);","import React from \"react\";\nimport PlayerSingleSelect from \"./PlayerSingleSelect\";\nimport PlayerMultipleSelect from \"./PlayerMultipleSelect\";\n\nconst checkResult = (question) => {\n  const { userAnswer, correctAnswer, type } = question;\n  if (userAnswer) {\n    if (type === \"singleChoice\") {\n      if (userAnswer == correctAnswer) {\n        return true;\n      }\n    } else {\n      if (userAnswer.length === correctAnswer.length) {\n        let found = true;\n        for (let i = 0; i < userAnswer.length; i++) {\n          const ans = userAnswer[i];\n          if (correctAnswer.indexOf(String(ans)) === -1) {\n            found = false;\n            break;\n          }\n        }\n        if (found) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n};\n\nexport default function RenderResults(props) {\n  const questions = Object.keys(props.questions).map(que => {\n    var data = props.questions[que];\n    return data;\n  });\n  const totalQuestions = questions.length;\n\n  const questionsList = questions.map((data, index) => {\n    const { question, options, userAnswer } = data;\n    let { correctAnswer } = data;\n    if (questions[index].type === \"singleChoice\") {\n      correctAnswer = Number(correctAnswer);\n    } else {\n      correctAnswer = correctAnswer.map((ans) => Number(ans));\n    }\n    const answer = checkResult(questions[index]);\n    const renderCorrectChoiceCard =\n      questions[index].type === \"singleChoice\" ? (\n        <PlayerSingleSelect\n          question={question}\n          currentQuestion={index}\n          totalQuestions={totalQuestions}\n          options={options}\n          userAnswer={correctAnswer}\n          disabled={true}\n        />\n      ) : (\n        <PlayerMultipleSelect\n          question={question}\n          currentQuestion={index}\n          totalQuestions={totalQuestions}\n          options={options}\n          userAnswer={correctAnswer || []}\n          disabled={true}\n        />\n      );\n    const renderUserAnswer = questions[index].type === \"singleChoice\" ? <h5 className=\"left\">Your Answer : Option {userAnswer}</h5>:<h5 className=\"left\">Your Answer : {userAnswer.map(ans => `Option ${ans}`).join(\",\")}</h5>\n    return (  \n      <li className={`row ${answer?'green':'red'} collection-item`}>\n        <div className={`row ${answer?'green':'red'}`} style={{paddingTop: \"5px\"}}>\n          <div className=\"row\">\n            {answer?<h2>Correct Answer</h2>:<h2>Wrong Answer</h2>}\n          </div>\n            <div className=\"col s12\">{renderCorrectChoiceCard}</div>\n            <div className=\"col s12\">{renderUserAnswer}</div>\n        </div>\n      </li>\n    );\n  });\n  return (\n    <div className=\"section center row\">\n      <div className=\"col s12 m4 offset-m4\">\n          <ul className=\"collection\">{questionsList}</ul>\n      </div>\n    </div>\n  )\n}\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport PlayerSingleSelect from \"../enduserview/PlayerSingleSelect\";\nimport PlayerMultipleSelect from \"../enduserview/PlayerMultipleSelect\";\nimport { getQuizToPlay, setSingleAnswer, submitQuiz, setMultipleAnswers, DELETE_CURRENT_ANSWER, SET_USER_NAME } from \"../../store/actions/playQuizActions\";\n// import RenderResults from \"../enduserview/RenderResults\";\nimport PlayedUserDetails from \"../enduserview/PlayedUserDetails\";\nimport Loader from \"../common/Loader\";\nimport GetUserDetail from \"../enduserview/GetUserDetail\";\nimport RenderResults from \"../enduserview/RenderResults\";\n\nclass PlayQuiz extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentQuestion: 0,\n      hasChangedAnswer: false,\n      userAnswer: '',\n      hasReachedEnd: false,\n      quizEnded: false,\n      showAnswers: false\n    }\n  }\n\n  componentDidMount = () => {\n    const { quizId } = this.props.match.params;\n    //Load Quiz\n    this.props.getQuizToPlay(quizId);\n  };\n\n  handleSingleAnswer = (currQuestion, index) => {\n    this.setState({\n      userAnswer: index,\n      hasChangedAnswer: true\n    });\n    this.props.setSingleAnswer(currQuestion, index);\n  }\n\n  handleMultipleAnswer = (currQuestion, answerArrayIndex) => {\n    const { questions } = this.props;\n    const { currentQuestion } = this.state;\n    \n    const currQues = questions[currentQuestion];\n    let userAnswer = currQues.userAnswer;\n    if(userAnswer){\n      if (userAnswer.indexOf(answerArrayIndex) === -1) {\n        userAnswer.push(answerArrayIndex);\n      } else {\n        userAnswer.splice(userAnswer.indexOf(answerArrayIndex), 1);\n      }\n    }else{\n      userAnswer = [answerArrayIndex];\n    }\n    this.setState({\n      userAnswer,\n      hasChangedAnswer: true\n    });\n    this.props.setMultipleAnswers(currQuestion, userAnswer);\n  }\n\n  renderCards = () => {\n    const { questions, totalQuestions  } = this.props;\n    const { currentQuestion } = this.state;\n    const ques = questions[currentQuestion];\n\n    if( ques.type ==='singleChoice' )\n      return <PlayerSingleSelect {...ques} currentQuestion={currentQuestion} totalQuestions={totalQuestions} handleSingleAnswer={this.handleSingleAnswer} />\n    else\n      return <PlayerMultipleSelect {...ques} currentQuestion={currentQuestion} totalQuestions={totalQuestions} handleMultipleAnswer={this.handleMultipleAnswer} />\n  }\n\n  resetAnswer = (currentQuestion) => {\n    this.setState({\n      userAnswer: ''\n    })\n    this.props.resetAnswer(currentQuestion);\n  }\n  renderNavButtons = () => {\n    const { currentQuestion } = this.state;\n    const { totalQuestions, questions } = this.props;\n  \n    return(\n      <Fragment>\n        <div className=\"row container center\">\n          <div className=\"col s4\">\n            {currentQuestion !== 0 && (\n              <div className=\"btn center btnNav z-depth-3\" onClick={this.handlePreviousQuestion}>\n                Previous\n              </div>\n            )}\n          </div>\n          <div className=\"col s4\">\n            {questions && questions[currentQuestion].userAnswer && questions[currentQuestion].userAnswer.length !==0 && (\n              <div className=\"btn center btnNav z-depth-3 deep-orange lighten-1 black-text\" onClick={() => this.resetAnswer(currentQuestion)}>\n                Reset\n              </div>\n            )}\n          </div>\n          <div className=\"col s4\">\n            {currentQuestion !== totalQuestions-1 && (\n              <div className=\"btn center btnNav z-depth-3\" onClick={this.handleNextQuestion}>\n                Next\n              </div>\n            )}\n          </div>\n        </div>\n        {this.state.hasReachedEnd && \n          <div className=\"row center\">\n             <div className=\"btn deep-orange darken-4\" onClick={() => this.getResults()}>\n                Submit Quiz\n              </div>\n          </div>\n        }\n      </Fragment>\n    );\n  }\n\n  handleNextQuestion = () => {\n    let { currentQuestion } = this.state;\n    const { totalQuestions } = this.props;\n\n    currentQuestion += 1;\n   \n    if(currentQuestion === totalQuestions-1){\n      this.setState({\n        hasReachedEnd: true,\n        currentQuestion\n      })\n    }else{\n      this.setState({\n        currentQuestion,\n      })\n    }\n  }\n  \n  handlePreviousQuestion = () => {\n    let { currentQuestion } = this.state;\n    currentQuestion -= 1;\n    this.setState({\n      currentQuestion,\n    })\n  }\n\n  getResults = () => {\n    const { questions, totalQuestions} = this.props;\n    let score = 0;\n    for(let i=0; i<Object.keys(questions).length; i++){\n      const { userAnswer, correctAnswer, type } = questions[i];\n      if (userAnswer) {\n        if (type === \"singleChoice\") {\n          if (String(userAnswer) == correctAnswer) {\n            score += 1;\n          }\n        } else {\n          if (userAnswer.length === correctAnswer.length) {\n            let found = true;\n            for (let i = 0; i < userAnswer.length; i++) {\n              const ans = userAnswer[i];\n              if (correctAnswer.indexOf(String(ans)) === -1) {\n                found = false;\n                break;\n              }\n            }\n            if (found) {\n              score += 1;\n            }\n          }\n        }\n      }\n    }\n    let scorePerc = (score/totalQuestions)*100;\n    this.setState({\n      score,\n      quizEnded: true,\n      scorePerc: scorePerc\n    });\n    this.props.submitQuiz(score, scorePerc);\n  };\n\n  setPlayingUser =(userName) => {\n    this.setState({\n      userName\n    })\n    this.props.setPlayingUser(userName)\n  }\n  \n  onShowAnswers = () => {\n    this.setState({\n      showAnswers: true\n    })\n  }\n  render() {\n    const { isLoading, questions, currentPlayingUser } = this.props;\n    if(isLoading){\n      return <Loader />\n    }\n\n    if(questions.length === 0){\n      return <h1 className=\"center\">Invalid Quiz</h1>\n    }\n\n    if(!currentPlayingUser){\n      return <GetUserDetail  setPlayingUser={this.setPlayingUser} />\n    }\n\n    if(this.state.quizEnded){\n      if(!this.props.usersScores){\n        return <h1 className=\"center\">Some error occured</h1>\n      }\n      return (\n        <div>\n           <PlayedUserDetails userDetails={this.props.usersScores} scorePerc={this.props.scorePerc} totalQuestions={this.props.totalQuestions} onShowAnswers={this.onShowAnswers} showAnswers={this.state.showAnswers} />\n           {this.state.showAnswers ? <RenderResults questions={this.props.questions} />: null}\n        </div>\n      );\n    }\n\n    return(\n      <Fragment>\n        {this.renderCards()}\n        {this.renderNavButtons()}        \n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    questions: state.playQuiz.questions,\n    userDetails: state.playQuiz.userDetails,\n    isLoading: state.playQuiz.isLoading,\n    totalQuestions: state.playQuiz.totalQuestions,\n    currentPlayingUser: state.playQuiz.currentPlayingUser,\n    usersScores: state.playQuiz.usersScores,\n    scorePerc: state.playQuiz.scorePerc\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    submitQuiz: (score, scorePerc) => dispatch(submitQuiz(score, scorePerc)),\n    getQuizToPlay: (quizId) => dispatch(getQuizToPlay(quizId)),\n    setSingleAnswer: (currentQuestion, answerIndex) => dispatch(setSingleAnswer( currentQuestion, answerIndex )),\n    setMultipleAnswers: (currentQuestion, answerArray) => dispatch(setMultipleAnswers( currentQuestion, answerArray )),\n    resetAnswer: (currentQuestion) => dispatch({\n      type: DELETE_CURRENT_ANSWER,\n      currentQuestion\n    }),\n    setPlayingUser: (userName) => dispatch({\n      type: SET_USER_NAME,\n      userName\n  })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayQuiz);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport M from 'materialize-css/dist/js/materialize.min.js'\nimport { addDefaultQuestion, getDefaultQuestions } from '../../store/actions/createProjectActions'\n\nclass AddDefaultQuestions extends Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = { \n            loadingDone: false,\n            questionCategory:'',\n            questions: [\n                    '',\n                    ''\n            ]\n            \n        };\n        this.state = { ...this.defaultState };\n    }\n\n    componentDidUpdate(){\n        var elems = document.querySelectorAll('select');\n        M.FormSelect.init(elems, '');\n        M.updateTextFields();\n    }\n\n    componentDidMount(){\n        var elems = document.querySelectorAll('select');\n        M.FormSelect.init(elems, '');\n        const { match } = this.props;\n        const category = match.params.category || \"\";\n        this.props.getDefaultQuestions(category);\n\n    }\n\n    handleOptionsChange = (e, index) => {\n        let { questions } = this.state;\n        questions[index-1]= e.target.value\n        this.setState({\n            questions\n        })\n    }\n\n    handleChange = (e) => {\n       if(e.target.name === 'questionOptions'){\n        this.setState({\n            question : e.target.value,\n            [e.target.name] : e.target.value\n        })\n        return;\n       }\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.addDefaultQuestion(this.state);\n        this.setState({\n            ...this.defaultState\n        })\n        M.toast({html: 'Question submitted successfully', classes: 'rounded'});\n    }\n\n    addNewQuestions = () => {\n        let newQuestions  = [...this.state.questions,''];\n        this.setState({\n            questions: newQuestions\n        });\n    }\n\n    removeQuestion = (questionKey) => {\n            let  newQuestions  = [...this.state.questions];\n            if(newQuestions.length<2){\n                return;\n            }\n            newQuestions.splice(questionKey-1,1)\n            this.setState({\n                questions:newQuestions\n            });\n    }\n\n    componentDidUpdate= (prevProps, prevstate) => {\n        var defaultQuestions = this.props.addDefaultQuestions;\n        if( prevProps.addDefaultQuestions.loadingDone !== defaultQuestions.loadingDone )\n            this.setState({...defaultQuestions})\n    }\n\n    render() {      \n        const { questions } = this.state;\n        const renderQuestions = questions.map((value,index) => {\n            index+=1;\n            return (\n                <div className=\"row\" key={'unq'+index}>\n                    <div className=\"input-field col s11\">\n                        <i className=\"material-icons prefix\">blur_circular</i>\n                        <input id={\"question_\"+index} type=\"text\" className=\"materialize-textarea validate\" name={\"question_\"+index} required data-error=\"Please enter some value\" value={value} onChange={(e)=>this.handleOptionsChange(e, index)} />\n                        <label htmlFor={\"question_\"+index} className=\"active\">{\"Question \"+index}</label>\n                    </div>\n                    <div className=\"input-field col s1\" onClick={() => this.removeQuestion(index)}>\n                        <i className=\"material-icons white red-text\">remove_circle_outline</i>\n                    </div>\n                </div>\n            )\n        });\n\n        return ( \n            <div className=\"row container\">\n                <form className=\"col s12\" onSubmit={this.handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                            <i className=\"material-icons prefix\">question_answer</i>\n                            <textarea id=\"questionCategory\" name=\"questionCategory\" value={this.state.questionCategory} onChange={this.handleChange} className=\"materialize-textarea\" rows=\"4\"></textarea>\n                            <label htmlFor=\"questionCategory\" className=\"active\">Question Category</label>      \n                        </div>\n                        <div className=\"col s12\">\n                                {renderQuestions}\n                            <div className=\"right btn-floating  waves-effect waves-light pulse red\" onClick={this.addNewQuestions}>\n                                <i className=\"tiny material-icons\">add</i>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">\n                            Submit and Add\n                            <i className=\"material-icons right\">send</i>\n                        </button>               \n                    </div>\n                </form>\n            </div>\n         );\n    }\n}\n \nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addDefaultQuestion: (newQuestion) => dispatch(addDefaultQuestion(newQuestion)),\n        getDefaultQuestions: (category) => dispatch(getDefaultQuestions(category))\n    }\n}\nconst mapStatetoProps = (state) => {\n    return {\n        addDefaultQuestions: state.createProject.addDefaultQuestions\n    }\n}\nexport default connect(mapStatetoProps, mapDispatchToProps)(AddDefaultQuestions);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {getQuizResult} from '../../store/actions/playQuizActions'\nimport Loader from '../common/Loader'\n\nclass Result extends Component {\n  componentDidMount = () => {\n    this.props.getQuizResult(this.props.match.params.quizId)\n  }\n  render() {\n    console.log(this.props.match.params.quizId)\ndebugger;\n    if(this.props.isLoading)\n      return <Loader />\n\n    let scoreList = [];\n    scoreList.push(\n    this.props.quizResult.map((details) => {\n        return (\n          <li className=\"collection-item\">\n            <div>\n              {details.userName}\n              <span className=\"secondary-content\">\n                {details.score}\n              </span>\n            </div>\n          </li>\n        );\n      })\n    );\n  \n    return (\n      <div>\n         <div className=\"section scrollspy\">\n            <div className=\"row\">\n                <div className=\"col s12 m4 offset-m4\">\n                  <h4>Here are the stats for your quiz</h4>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col s12 m4 offset-m4\">\n                    <ul className=\"collection with-header\">{scoreList}</ul>\n                </div>\n            </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) =>{\n  return {\n    isLoading: state.playQuiz.isLoading,\n    quizResult: state.playQuiz.quizResult\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getQuizResult: (quiz_id) => dispatch(getQuizResult(quiz_id))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Result)\n","import React from 'react';\nimport './App.css'\nimport 'materialize-css/dist/css/materialize.min.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/layout/NavBar';\nimport CreateProject from './components/projects/CreateProject';\nimport DashBoard from './components/projects/DashBoard';\nimport PlayQuiz from './components/projects/PlayQuiz';\nimport AddDefaultQuestions from './components/projects/AddDefaultQuestions';\nimport Result from './components/enduserview/Result';\nconst data  ={\n  questions : {\n    \"0\": {\n      question: \"Ans is 2\",\n      correctAnswer: \"2\",\n      type: \"singleChoice\",\n      options: [\"1\", \"2\", \"3\", \"4\"],\n      userAnswer: 3,\n    },\n    \"1\": {\n      type: \"singleChoice\",\n      correctAnswer: \"4\",\n      question: \"Ans is 4\",\n      options: [\"1\", \"2\", \"3\", \"4\"],\n      userAnswer: 3,\n    },\n    \"2\": {\n      options: [\"1\", \"2\", \"3\", \"4\"],\n      correctAnswer: [\"1\", \"2\", \"4\"],\n      question: \"Ans is 1,2,4\",\n      type: \"multipleChoice\",\n      userAnswer: [1, 2],\n    },\n    \"3\": {\n      type: \"multipleChoice\",\n      correctAnswer: [\"1\", \"3\"],\n      options: [\"1\", \"2\", \"3\", \"4\"],\n      question: \"ans is 1,3\",\n      userAnswer: [1, 3],\n    },\n  }\n};\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\" component={DashBoard} />\n          <Route exact path=\"/createQuiz\" component={CreateProject} />\n          <Route path=\"/createQuiz/:questionType\" component={CreateProject} />\n          <Route exact path=\"/playQuiz/:quizId\" component={PlayQuiz} />\n          <Route exact path=\"/addDefaultQuestions\" component={AddDefaultQuestions} />\n          <Route path=\"/addDefaultQuestions/:category\" component={AddDefaultQuestions} />\n          <Route exact path=\"/playQuiz/:quizId/result\" component={Result} />\n          <Route path=\"/result/:quizId\" component={Result} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import firebase from 'firebase/app'\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nvar fbConfig = {\n    apiKey: \"AIzaSyANgUL2RVKf0B_cnBBse303zzrEVu98RRQ\",\n    authDomain: \"quizapp-350be.firebaseapp.com\",\n    databaseURL: \"https://quizapp-350be.firebaseio.com\",\n    projectId: \"quizapp-350be\",\n    storageBucket: \"quizapp-350be.appspot.com\",\n    messagingSenderId: \"394745558836\",\n    appId: \"1:394745558836:web:3dc1fa0978cf4ac6e51761\",\n    measurementId: \"G-QLTNRWTF81\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(fbConfig);\n  firebase.firestore();\nexport default fbConfig;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware,compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/reducers/rootReducer';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ReactReduxFirebaseProvider , getFirebase } from 'react-redux-firebase';\nimport firebase from 'firebase/app'\nimport { reduxFirestore ,getFirestore, createFirestoreInstance } from 'redux-firestore'\nimport fbConfig from './config/fbConfig';\n\nconst rrfConfig = {\n  userProfile: 'users',\n  // useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n}\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(firebase, fbConfig)\n  ), \n);\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance // <- needed if using firestore\n}\n\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}